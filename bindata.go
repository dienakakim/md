// Code generated by go-bindata. (@generated) DO NOT EDIT.

 //Package main generated by go-bindata.// sources:
// template.html
package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templateHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x3c\x6b\x93\xaa\xc8\x92\xdf\x27\x62\xfe\x03\xdb\x13\x1b\xf7\xcc\xda\xb6\x80\xf8\x9c\x39\x27\x6e\xe1\xdb\x16\x6d\x5b\x6d\xc5\x89\xbb\x11\x05\x14\x50\x0a\x14\x0d\x28\xea\xc4\xfc\xf7\x0d\xd0\x7e\x28\x82\xe8\x39\xb3\x7b\xd7\x0f\x86\x5a\x55\x99\x59\x59\x59\xf9\xc6\xdf\x75\xcf\x34\xbe\xfd\xfc\xd3\xcf\x3f\xfd\xae\x23\xa8\x7c\xfb\xf9\x27\x8a\xa2\xa8\xdf\x4d\xe4\x41\xca\x82\x26\xfa\x7a\xb7\xc6\xc8\xb7\x89\xe3\xdd\x51\x32\xb1\x3c\x64\x79\x5f\xef\x7c\xac\x78\xfa\x57\x05\xad\xb1\x8c\xb2\xe1\x97\x7b\x0a\x5b\xd8\xc3\xd0\xc8\xba\x32\x34\xd0\x57\xe6\xee\x0d\x92\xeb\x6d\x0d\x74\xf8\x12\xbc\x1e\x4c\xe8\x2c\x15\xe2\x5b\x59\x89\x28\x5b\xea\xcf\x8f\x91\xe0\x25\x91\x4d\xd6\xc5\x3b\x6c\x69\x55\x4a\x22\x8e\x82\x9c\xac\x44\x36\xbf\x1d\x4f\x32\xb1\xb5\xc7\x5a\xa5\x58\x9a\xb6\x23\xc3\x70\xf3\x36\x5c\x29\x9f\x1b\x76\x34\x6c\x55\x29\x9a\x82\x2b\x8f\x9c\x0c\xda\x50\x51\x42\xe4\x5c\xe1\x68\xe1\x5f\x01\x87\xde\xbe\xfc\xd3\x44\x0a\x86\xd4\x97\x4f\x88\x4a\xc5\x92\xbd\xf9\xf5\x74\x37\xc9\x7b\x3d\xc2\xc7\x14\x22\x84\xfe\x75\x84\x3e\x64\x66\xee\x33\x37\x23\xac\xfd\xa7\x4a\x2c\x2f\xab\x42\x19\x9d\xa2\x3a\x0c\x98\xd8\xd8\x56\x29\x22\x7b\x58\x26\x96\x9b\x35\xb0\xb5\x3c\xc1\xe9\x3a\x72\x95\x5a\x39\xc6\x17\x05\x7a\xb0\x1a\x2c\xcb\xf9\x44\x55\x7f\x93\x75\xe8\xb8\xc8\xfb\xba\xf2\xd4\x6c\xf9\x37\x09\xba\xa8\xc8\xdd\x2b\x74\xa5\xf5\xac\x01\x1e\x84\xaf\xb9\xff\xf6\xa9\xd6\x1c\x82\xe4\x17\xdf\x98\xd0\x46\x1b\x00\xd0\x82\xe1\x77\x2d\x78\xeb\x84\x1f\x27\xca\xf8\x65\x12\x7c\x9c\xcb\x21\xac\x70\x88\x00\x30\x04\x60\xcc\x08\x6b\x21\xf8\xbe\x0d\xe0\xf3\xdd\x60\x44\x6c\x8a\x8d\x49\xfe\x79\x21\x4d\x9b\x3e\x00\xa0\x1e\x2e\x6a\x4c\x82\x95\x00\x74\xc7\xfa\xda\xec\xb3\x4a\x2d\xf8\x71\xbc\x0c\x31\x87\x48\xf6\xf4\xcd\x2d\xde\x92\x82\x8f\xa5\x00\x68\x6d\x1b\x0c\xd7\x26\x42\xa6\xdc\xd1\x2d\x71\xd6\x0f\xe0\xb5\xc6\x9f\x17\xf1\x04\x74\x58\xc5\x45\x53\x11\x00\xd0\x74\x83\x91\xa7\xfd\xd6\xe5\xc6\x6b\xc5\x83\xad\x17\x7d\x1e\x7c\x77\x43\xa2\xe9\xe0\xad\xaf\xe9\x1c\xac\x30\x24\x18\x0b\xe8\x0b\x49\xe1\x49\xf0\xbe\xac\x81\x72\xfd\xb9\xa5\x7b\x4a\x3b\x98\xdf\x2b\x07\x3f\xd6\x43\x54\x7e\x0b\x80\x9a\x2a\xb5\x2a\x0b\x31\xa0\xcf\x05\xef\xfc\xa9\x01\x1e\x83\x31\xef\x89\x33\x3d\xa0\xaf\xf6\x1a\xc2\xd3\x0e\x4c\x2c\x83\x91\x59\xd0\xa5\x69\xb0\xff\x71\x80\x84\x1f\x06\x43\xc6\x6c\x55\xca\xbb\x03\xb9\x55\xd9\x29\xc1\x8f\x38\x58\x0a\x50\xf0\x26\x34\xf2\x43\x7b\xc0\xfb\xb2\xf9\x12\xfc\xd8\x90\x82\x1f\xdb\xc1\xfe\xf8\x1c\x6c\xb6\xec\x65\x7e\x01\xc7\x62\x71\x03\xcb\x5d\xd0\x12\xa6\xb9\x41\x91\xe5\xeb\x98\xf6\xba\x3d\x71\x88\x2d\x79\xd6\xd8\xda\x62\x07\xb7\xba\x8b\x91\xd6\xb6\xf0\xb0\xb8\x32\xc7\xee\xa4\xb1\xed\x99\x05\xfe\xa5\xd8\xaf\xf3\x4f\xe5\xb1\xed\xb9\xc5\x26\xbd\xce\x2c\x73\x34\xb4\x58\x9c\xc1\x5e\xbb\xee\xe7\xd7\x6c\xa6\x92\xa9\xf3\x8f\xe3\x9d\xdb\xed\x5b\xd3\x6e\x7f\xac\xb5\x1b\x5b\x8e\xd7\x5a\xf9\x86\xd0\xa9\xd4\x6b\x8d\xfa\xa0\xd5\x98\xed\xea\xa0\x3e\x29\xe8\xfc\xa3\xd0\xd1\xfa\x4f\xf3\x57\x52\xcf\x8f\xb0\xf1\x02\x67\xf3\x5a\xe3\x39\x9f\xeb\x94\x80\xb7\x69\x74\x7b\xde\x6e\xb7\x9a\xab\x9d\xcc\xcb\xcb\xd2\x76\x36\x63\x63\x36\xd2\xa7\x8f\x52\x7e\xcc\x23\xb9\xc5\x30\x8e\x4f\xfa\x86\x69\x5a\xcc\x13\x3b\x15\xe5\xae\xbc\x33\xf2\x2c\xf2\x46\xf6\xa3\xb5\xc3\xb5\x92\x31\xdc\x4e\x11\xe3\x9a\x2f\x4f\xdb\x5c\xcf\x2b\x3d\xca\x19\x7a\x3d\x15\x73\x1a\xd0\x3a\x9d\xc6\x2b\xe8\x57\x7c\x44\xdb\xfe\xe3\xcc\x41\x58\x80\xee\x66\x0d\xa5\xfa\x50\x10\x38\x07\x0f\x32\xaf\x1b\x81\x25\x9a\x5f\x6f\x0d\xe6\xe3\xd9\xc6\xdf\xd4\xf1\x56\x1e\x76\x64\x22\x36\xf9\xde\xa2\xf0\x98\x6f\x74\xe0\x48\xf6\xc0\x2b\xbb\x1c\x8b\xd8\xcf\x6c\x4d\x5d\x46\xa5\xb5\x2f\x54\x16\xa3\xd7\x41\xb9\xbb\x7d\x51\x0a\xcf\xed\x8a\xb6\x1d\x7b\x6c\xa6\x9b\xdb\x4e\x4c\xd1\xe8\x3c\xd3\x2e\xcd\x59\xc5\x4c\xe9\xc5\x64\xc8\x0e\xed\x26\xa8\xd7\x80\x93\x85\x0e\xeb\xa3\xd5\xac\xed\xbf\x3c\x6b\xeb\x5e\xd7\x62\xbc\x61\x69\x83\x57\x2f\xeb\x1c\x91\xc7\xcf\x4d\x8e\x35\xfb\xda\xbc\xc5\x6b\x62\x4b\xf2\xe7\x03\x1e\x03\xd0\x6c\x75\xf9\x8e\x00\x00\xde\x81\x66\x28\x0a\x18\xb4\x3a\x60\x67\x2d\xa0\xc8\xf2\x4b\xb1\x05\x00\x87\xad\xf2\xce\x9f\xe1\xcc\x94\xcd\x08\x8b\xda\x4e\xe8\xd4\x81\x3d\xf2\xd7\xb3\x5d\xad\x52\x9a\x73\x1d\xad\xdc\xcf\xf1\x1b\xb1\x35\xd7\x64\xcd\x28\xb0\x7c\x6d\x34\x7c\x04\x20\xbf\xa8\xbd\x94\x6b\x00\xf0\x2a\x78\xbb\x4b\x0d\xfe\x1d\x3f\xa7\xe6\xd7\xa0\x36\x9c\x0f\x01\xdf\x11\x16\x8f\x1a\x30\x45\xf0\xd8\xd0\xf8\x99\x06\x00\xea\xdb\x0b\xb1\x25\x16\xfd\x31\xe6\xb5\xf9\x94\xd7\xd8\xa5\x39\xd9\x90\x3a\xe0\x84\x27\xbd\x35\x17\xc4\x1d\x8f\x19\xd0\xde\x6a\x2f\x3d\x71\x38\xa9\x41\xe8\xbf\xd6\x01\xf7\x54\xd3\x37\xba\xa9\xe7\xca\x83\x7a\xbd\xe1\xae\x81\xdf\xd6\x84\x47\xa1\x53\xb7\x5a\x3d\x7a\x53\xd2\xba\xc3\x1a\xf0\x05\xd0\x55\x38\x21\xd4\x00\xed\x70\x7f\x9a\xd8\x82\x80\xab\x83\xd6\xb3\x26\x0e\x97\xa0\xbd\x6d\x09\xcd\x72\x5f\x13\x9d\x8e\x90\xef\x76\x40\xeb\x45\x14\xeb\xe3\x0c\x68\x2c\x80\xbf\xaa\x37\x6d\xde\x04\x95\x47\xa1\xde\xf0\x85\x9a\x5e\xc1\xb9\x75\xb9\x5d\x76\xdb\x74\x8e\x53\x86\x32\x83\x81\x09\x96\xa0\x07\x27\x8f\x3d\x6d\x0f\x7f\x2c\x56\x7a\x75\xb7\xa3\x35\x3a\x92\xa7\xbd\xb6\x27\x4f\x76\x1d\xe7\xb5\x27\xc2\xbf\x6c\x9f\xc7\xe6\x58\x51\x06\xe6\xeb\x78\x36\xd6\x1b\xb3\x57\x87\x48\xac\x36\x64\x9a\x0b\xdf\xae\xaf\x55\xbf\xc6\x2b\xa6\x32\xab\x15\xc0\xcb\x63\x73\x95\x47\x05\x41\xed\x37\xbb\x6c\xe5\x71\x3c\x1c\x73\xe5\x81\x54\xc9\x19\xaf\xa2\x3f\x68\xcd\x37\x68\x82\x8c\x3e\x3b\x61\x9f\x8b\x19\x19\x38\x9a\x57\xeb\xda\x70\x35\x2d\x4d\x86\xfc\xab\xd5\x5c\x4e\xdc\x05\x10\x73\xcb\xc1\x84\x91\x9f\x32\x75\xa0\xad\x37\xbe\xc5\xc8\xfa\xbc\xee\x4f\x24\xa5\x58\x6b\x62\xb3\x35\xf3\x77\x7e\xb3\xe8\x3d\x49\xcd\x8e\xbc\x68\x18\x99\xf5\xda\x14\x72\xd2\x16\x70\x65\x54\xf4\xa6\xce\x23\x70\x4c\x6e\xde\x35\x6a\x92\xe2\x3a\x9b\xa5\xdb\x63\x80\x3f\xb5\x72\x5b\x7e\xd4\x7d\xb4\x45\xe9\xb5\x0c\x66\x10\x8e\xa5\x72\xb8\x5f\xb6\xbc\x00\xfe\xa0\x46\xd3\x73\x87\x47\xc3\x7e\x7d\x38\x98\x0e\x72\x39\x57\xe1\x03\x36\x3f\x63\x71\x2a\x82\x46\xa3\xd7\xf0\x85\x71\x83\x5b\xed\x48\x61\xbe\x23\x05\x89\xe5\x37\x8a\xd5\x1c\xc8\xa0\xb7\xe9\x2f\x40\x51\x62\xf9\xed\xd8\xf5\x6b\xe5\x85\xe8\x6b\xf4\x8b\xd1\x5f\x91\xda\x78\x0a\x84\xd7\xfe\x4e\xd8\xb9\xe4\x91\x71\x1a\x7a\xff\x95\xdf\x36\xb6\xc8\xd1\x0a\x4f\x42\xd7\x10\x57\x2f\x2b\xd4\x18\x3f\xca\x4a\xae\x5c\x59\xf1\xb6\x65\xaf\x3b\x8d\x17\x62\xa2\x76\x8f\x08\x2e\x00\x88\xe9\x28\xdc\x9b\x3d\xe1\x58\x32\x1d\x8e\xe9\x52\x6d\xc8\x8f\x5b\x6b\xba\xcb\xeb\x50\x5b\x96\xda\xc3\xdd\xe3\x46\x86\xac\xdb\xad\x35\x18\xbd\xee\x71\xc3\x66\xa6\xd2\x1d\x8c\x68\x4b\x82\x50\xac\xd7\x86\xaa\x5f\xeb\x96\xc0\x2a\x0f\xda\x8b\x4c\x6f\xc0\xe4\x9b\x82\x69\x16\x65\xa3\x54\x2a\x17\xd6\x6b\x64\xd1\x4b\x7e\xd1\xae\xf1\xba\x6a\x8b\xab\x3e\x2c\x3c\xe9\x8c\x4c\x23\x76\xb6\xca\x2f\x1a\xeb\x69\xab\x34\x51\x9e\xea\xbd\x39\xd7\xaf\xb0\xd6\xc0\xcc\x34\xf8\xd9\x0a\x48\x6d\xb3\x23\x8c\x9e\x05\x37\xc3\xc1\x49\x43\xe1\xfa\x4a\xbe\xd6\xae\x97\xfb\xca\x7a\xd0\x1b\xbb\x80\x6d\xf5\xca\x42\xe5\x69\x50\x97\xe4\x5e\x46\xaf\x97\x6a\xcc\x86\xc0\x36\xea\x75\x47\x0d\x48\xe8\x66\x63\xca\x70\xf2\x72\x53\xcb\x8c\x27\xe5\xf1\x66\xed\x8a\xc5\x19\x8d\x7a\x4f\xe6\xb3\xee\x6c\xd9\xe9\x0b\x26\x3d\x7b\xe9\x48\x76\x99\xeb\xf5\x86\x4f\xad\x4e\x49\x2e\xba\x03\x3c\xd9\xd9\xd3\xce\x74\x54\x68\xed\x8c\x91\x36\xd9\xed\x7a\xfc\x08\x2f\x07\x4f\xcd\xf1\x60\xf6\x6a\x6c\x4b\xce\xeb\x86\x9e\x33\xc3\x02\x0f\x3a\x64\xce\x8f\x9a\x58\x1f\x8a\xc3\xc1\x80\x6f\x28\xcb\xda\x40\x9b\x8d\x07\x6d\x40\x97\xda\xa0\xb5\x68\x4d\x71\x67\x01\x9f\xe6\xfd\x29\x93\xcf\x65\x0c\xb3\x38\xaa\x34\xc7\x25\xa7\xd7\x6e\x76\x8b\xea\x50\x5a\x82\xf1\xa0\xc5\x2c\xd8\x41\x53\x58\xc9\x8f\xdd\xae\xbb\xe9\xbc\xa8\xc3\xc1\xb3\x91\xa9\x74\xb7\x0a\x2c\x8e\x0c\x46\x99\x88\xfa\xa8\x66\x32\xca\xb6\x66\xa8\x04\xd5\xd7\x88\x7b\x15\x44\xa5\xd7\x90\xd4\xd7\xb6\x9a\x1f\xe4\x80\x52\x5f\x99\xee\x22\x3c\x2f\xb3\xaf\x89\x04\x80\xf9\x50\x5c\xf0\xe6\x16\xb4\xc4\xe1\xdc\x54\xf4\x5e\x79\xd7\x53\xea\x8d\xad\x02\x9e\x55\x02\x5e\x3b\x07\xeb\x2b\x00\xde\x07\x8f\x80\x17\x00\x9f\xcb\xe5\x02\x3b\x07\xa2\x2e\xc6\xc1\xfb\xf8\xfa\xf5\x57\x4a\x25\x8e\x09\xbd\x2f\xff\x08\x7c\x97\x7f\xfc\x1a\xe3\xc6\x25\x7b\x67\x59\xd3\xcd\x7a\x68\xe3\x05\xee\x28\xca\x42\x65\xb1\x72\xbd\x2a\xc5\xd0\xf4\x7f\x9e\xb8\x4c\x59\x1f\x49\x4b\xec\xa5\x9b\x6c\x60\x0b\x65\x75\x84\x35\x3d\x18\x7f\x28\x9c\x0c\xcb\xc4\x20\x4e\x95\xfa\x85\xe5\xd8\x0a\x8b\x7e\x4b\x70\xe2\xb2\xd0\xb6\x0d\x94\x75\xb7\xae\x87\xcc\x7b\x8a\x0f\x7c\x39\x01\xca\xa3\xf0\x7b\x93\x58\xde\x3d\x75\x37\x42\x1a\x41\xd4\xa4\x73\x77\x4f\xb5\x91\xb1\x46\x1e\x96\xe1\x3d\x05\x1c\x0c\x8d\x7b\xca\x85\x96\x9b\x75\x91\x83\xd5\x7b\xea\x0e\x04\xc0\xa8\x5a\x80\x9d\x6a\x98\x64\x81\xef\x3e\x2d\x3f\xf3\xcb\x68\x6b\x4a\xc4\xb8\x3b\x47\x60\xc0\x81\x2a\xc5\x14\x23\xee\xec\x85\xad\xfb\xc4\x51\xb2\xbe\x03\xed\x2a\x25\x39\x08\x2e\xb3\xc1\x0f\xe9\x4e\xee\xc1\x36\xb2\xf2\xe9\xf9\xbd\xb1\xb2\x08\x4b\xf9\xd2\x35\x80\x98\xfb\xc4\x71\x37\x7c\x5f\xc7\xa1\xa3\xe9\x82\x2c\x17\xd2\xa3\x43\xc9\xd8\x90\x15\xbb\x2f\x95\x63\x65\x26\x3d\xa2\x3d\xdd\xee\xa5\xdd\x99\x38\x0e\xe1\x5e\x26\xaf\xd8\x99\xe5\xc5\x82\x62\xcb\xc5\x3c\x4c\x0f\x6a\x19\x07\x48\x29\xe5\x21\x57\x49\x0f\xc8\x56\xdc\x0b\xfb\x4f\x73\xf8\xb6\x8b\xd2\x31\xd3\xb9\x34\xbe\x97\x38\xf9\x82\x10\x1c\xe6\xb9\x0e\x4c\x39\x2f\x12\xff\xbd\x4b\x67\x9e\x55\x8b\xec\x15\x42\x63\xfa\xc9\x28\x63\xef\x01\xca\x17\x59\xfa\x8a\x93\x91\x56\x71\x90\xa4\x3c\xa3\xb0\xe5\xf4\x90\x70\xac\x04\xab\x50\x95\x54\xf9\x44\xef\x48\x50\x5e\x6a\x0e\x59\x59\x4a\xf6\x56\x8c\x32\xfb\xbd\x18\xaf\x95\x63\x99\xad\x56\x25\xa4\x92\x73\x27\x1d\xe6\x68\xaa\xd4\xdd\x7f\x0b\x77\x57\x1c\xf4\xbb\x28\x9e\x4d\x1d\xf8\x07\xb5\x5d\xa2\xe9\x38\x8b\x75\xe5\x95\x36\x8d\x38\x9e\x95\xf2\x05\x99\x56\xaf\x80\xa4\x27\x8b\xa8\xa9\x1f\xd4\xd1\x85\x69\xee\x8d\x3b\xbf\x56\xe3\x47\x35\xec\xde\x6e\x7a\x5b\x03\x55\x29\xec\x41\x03\x9f\x4a\xcc\xad\x2a\xd8\x94\x6e\x3d\xcd\x6b\x11\x29\xc9\xb7\xf7\xf2\x0d\x50\x55\x84\x54\xfa\x1a\x2e\x32\xc9\xd6\x25\x05\x4a\x5a\x55\x55\xee\x0a\x94\xb1\x3e\xc6\x5e\xd9\xa5\xda\xa4\xa4\x5c\x73\x49\x70\xbc\x66\x29\xaa\x65\x35\xc5\x26\xaf\x96\x4e\xc5\xb9\x51\x66\xae\x75\x48\x24\x18\xb7\xb7\x42\xb9\x48\x17\xaf\xd0\x86\xae\x16\x07\xa9\x52\xa8\x28\xf0\x8a\xdd\xcb\xc4\x89\xe8\xa5\xd0\xaf\x57\x90\x4c\x1c\xe8\x61\x62\x55\xa9\x95\xa5\x20\x27\xf0\x66\xe3\x14\xc2\x35\x46\xf6\x90\x8c\x3d\x45\xaa\x60\xd7\x36\xe0\xb6\x4a\x61\x2b\xf4\x9b\x25\x83\xc8\xa7\xb9\xda\x35\x72\x02\x8f\xde\xc8\x42\x03\x6b\x56\x75\x4f\xa8\x47\xec\x53\xaf\x1c\x1b\x46\x95\x92\x57\x8e\x83\x2c\x2f\x74\xf1\xd3\x91\x16\x39\x9e\xa8\x74\x79\x0e\xb4\x5c\x1b\x06\x80\x53\xc2\xac\x42\xd9\xc3\xeb\x04\x7f\x07\x56\x75\xb2\x46\x11\x19\x24\x2b\x2f\xe4\xc3\x21\xdd\x9e\x52\x51\xb8\x9e\x43\xac\x88\x70\x1c\xc9\x33\xb6\x74\xe4\xe0\x94\xe4\xa7\x80\x27\x11\x43\x41\x29\x39\xac\x47\x54\xd8\xa7\x08\x8a\x45\x66\x4c\xe1\xe2\xa1\x58\x42\x66\x5a\x16\x60\x33\x42\xef\xa1\xae\x72\x30\x38\x16\xb1\x52\x2a\x7a\x99\x28\x09\x07\xb7\x94\x94\xf8\x41\x3b\xea\xa8\x1c\x45\xb3\x26\xb1\x88\x6b\x43\x19\xdd\x7f\x7c\x4c\x08\x2e\x91\x99\x92\xc1\x11\x39\xfa\x5c\x5f\x3a\xb8\x4a\x67\x0a\x4c\x6f\x51\xea\xa9\xaa\x0b\x24\x53\x35\x88\x5f\xa5\xd6\xd8\xc5\x92\x91\x92\x71\xd8\xb2\x57\x91\x58\x28\xd8\xcf\xbb\xf8\xc5\x95\xa8\xbe\x03\xfe\x8d\xb4\xfe\xe1\x6d\x6d\xf4\x55\xd6\x91\xbc\x94\xc8\xe6\x5f\x37\xd5\xe7\xde\x8b\x5a\x29\xe9\xff\xaf\x74\x58\xbe\x93\xd9\xef\xc2\x76\x9e\xe7\x9f\xe4\xeb\xfc\x84\xa3\xfc\xc5\x55\x6a\x23\xd6\xd0\xd1\xf9\x62\x51\x29\xfe\x76\xc1\xde\xa4\xbf\xa1\x31\xca\x33\xde\x82\xfd\x30\xb5\x57\xa4\x53\x9e\x75\xf4\x4a\xc6\x5d\xb6\xb7\x4b\xc0\x14\xec\x4d\xc2\x4d\xd4\xb1\xa2\x20\x2b\xd6\x11\xaa\x52\x74\x64\xf1\x5e\xa4\xa2\x18\xdf\x45\xcd\xf3\x88\x59\xa5\x18\x7b\x43\xb9\xc4\xc0\x0a\xf5\x8b\xa2\x22\x16\xa5\xf4\x23\x74\x27\x2e\x36\x7b\x37\xea\x1e\x94\x8c\xa8\xf7\xf0\x16\xb8\xa5\x0c\xdb\x02\x3c\x50\xf5\xa2\xc7\x9d\x8c\xc6\x40\xd0\x09\x6e\x95\xa7\x7f\x2f\x01\x21\xf8\x38\xe3\x62\x43\x79\xaf\x02\xce\xf3\x58\x26\x86\x01\x6d\x17\x05\x5a\x78\xff\x29\x25\xce\x04\x23\xe3\xe9\xa7\xc4\x5c\xab\x88\xf4\x84\x84\x8e\xce\x26\x8c\xe5\x13\xc6\xb8\x84\xb1\x42\xc2\x58\xf1\x74\x37\xfb\x0b\x11\x78\x78\x71\x97\xe5\x5d\x74\x53\xef\x37\xc1\x01\xc9\xb3\x91\x14\xee\x8d\x57\x3e\x12\xc4\x7c\x76\x73\xb8\x1f\x85\x25\x9f\x84\x25\xda\x06\x72\x23\x16\x2e\x01\xcb\x99\xa4\xf7\x8d\x58\x0a\x49\x58\x7e\x18\xc7\x22\x12\xf6\x19\xcb\x8f\x3a\x7d\xfb\x3b\xc4\x98\xa1\xed\x94\x56\x3f\x8c\x8f\x5e\x57\xc4\x8b\x28\xa4\x2b\x7d\x29\x62\xc4\x5f\xc9\x55\x24\x36\x3c\x28\x98\xac\x81\xd4\x58\x0b\xf6\x23\x2f\x2c\x31\x2e\x11\x48\x22\x34\x1a\xd8\x3d\x64\x97\xb2\x81\x6f\x57\xa5\x0c\xe2\x23\x27\xeb\x10\x13\x5a\x57\x60\x4d\x44\x4c\x8c\x3d\xee\x4b\xa4\x5d\x98\x71\x0d\xfd\xd0\xb0\xf5\x94\xa9\x14\x25\x92\x9d\x3a\x70\xff\x70\x6c\xe9\xc3\x9f\x44\xbf\x72\xd4\x14\x88\x45\xb2\xcf\x48\x5b\x19\xd0\xb9\xa7\x6a\xc4\x72\x89\x01\xdd\x7b\xea\xae\x87\x25\xb4\x77\xbe\xa8\x60\xce\xdd\x3d\x25\x20\xcb\x20\xc1\x9c\x95\x83\x91\x93\x2e\xec\x61\xd3\xde\x86\x33\xe1\xd6\x35\xb2\x98\x54\x77\xfc\xf7\xd9\x64\x5c\xea\xe4\x6c\x5a\x64\xbf\xb7\x94\x80\x6d\x23\x4b\x5f\xb8\xe9\xd4\x7f\x60\xd3\x26\x8e\x07\xd3\x66\x3e\x02\xa0\x11\x6b\x7b\x0c\x94\xb3\x37\x37\x81\x8d\x98\xd7\x63\xb0\xe5\x1b\xc1\x46\xec\xe9\x31\xd8\xc0\xd8\xdd\x04\x37\x62\x41\x8f\xe1\xb2\xb7\xb2\x21\x62\x33\x8f\xe1\x06\xee\xcc\x4d\x70\x23\x56\xf2\xe4\xd4\xe8\xeb\xe1\xfe\xaf\x04\x08\xff\xb7\xd1\xc1\xb7\xaa\x8a\x1d\xd7\xcb\xca\x3a\x36\xe2\xd4\xef\x5e\x19\x5d\xcb\xbc\x6f\x55\x03\x5e\x00\xfc\xae\xc9\xae\x3e\x70\x58\xb5\x88\xf7\xe5\x0f\xdd\x41\xea\xbf\x22\xed\xbc\x87\xb0\xfd\x7c\x7a\xe0\x3b\xc2\xf6\x07\x68\xc9\x3a\x89\xe6\xdd\x0d\x02\xbd\x2a\x15\x88\xd9\xf9\x04\x4b\xd6\xd9\xfb\x62\x51\x87\xf0\xc8\xbe\x65\xcf\x78\xbf\xc7\xcd\x18\x57\x91\x59\x55\x89\xbc\x8a\x14\xcb\x0e\x09\xda\xd4\xd6\xf4\xc3\x61\x8b\xf7\x08\x94\x44\x8f\x23\x21\xdb\x98\x98\x88\x4c\x08\x20\x83\x1b\x71\x8d\xfb\x77\x8d\x2b\x5b\x4c\x6b\xd7\xe2\x33\x24\x0f\x6c\x21\x92\x14\xfe\x08\x71\x63\xd2\x27\xa1\x3e\x8d\x44\xe1\xd1\x42\x11\x62\x10\x87\x22\x85\xba\xb7\x4c\xc9\xf7\x7a\xe1\x1f\x64\x52\x4c\x64\x0f\xc7\xad\x3a\xe7\x13\x06\x7b\x51\x0e\x39\x70\x4b\x52\xe6\x83\xb2\xf4\x8a\xe9\x7a\xc8\xe9\x15\x53\x3a\xd8\x4b\x29\x02\x28\x4d\x61\xe8\x9d\xd9\x79\x7b\x43\x45\x9f\x2b\xf8\xec\x6d\x31\x17\x34\x43\x54\x73\xbc\x1d\x16\xc7\x71\x4a\xe1\x34\x77\x79\xea\x7b\x99\x58\x51\x22\x46\xe6\x5c\x61\xf4\x6c\x9f\xc4\x41\xf8\xf6\xc7\xcd\xd8\x1b\xea\x17\xb9\x28\x4b\x0a\x93\x94\xb6\xcb\x1e\x97\xfe\xce\x4f\x75\xa0\x82\x57\x6e\xc8\x9f\xc8\x84\x4d\xd6\xd5\xa1\x42\xfc\x80\xc3\x2e\xf2\x28\x9a\xca\x06\xa8\xe9\xeb\x8a\x89\xff\x7f\x32\x49\x67\x12\x30\x67\x54\xd7\x85\x54\x40\x72\xab\x1f\x9b\x9a\x69\xef\x4e\x7d\xf8\x6c\x4a\x12\x0b\x53\xcf\xcc\xa7\x9e\xc9\xa5\x9e\x59\x48\x3d\xb3\x78\x3c\x33\xae\x10\xc0\x48\x8c\xca\xe6\x6f\xb9\x4c\x61\x71\x07\x1b\xd8\xdb\xbe\xa5\xc2\xd3\xf2\xfa\x50\x2b\x38\x58\xf5\x24\x5e\xa7\x9e\x99\x4f\x3d\x93\x4b\x3d\xb3\x90\x7a\x66\xf1\x78\xe6\xc5\x2a\x48\x7a\x07\xed\x94\x59\xe9\xc5\xf4\xc6\x75\xf9\x1b\xd7\x71\x37\xae\x2b\xdc\xb8\xee\x94\xe5\x89\xc2\xfe\x59\x54\xaf\xaa\x49\x46\xd3\xd4\x6f\x0e\xf0\x9b\x8a\x7a\xc8\x47\x9c\x8a\xc4\x52\x7a\x7c\xa5\x07\x41\x24\xa3\x94\xdd\x67\xd1\xc4\xf6\x75\x74\x31\x0f\x51\x7f\xee\x07\x51\x96\x94\x0c\x67\x42\x2f\x2a\x25\xa0\xc4\x7c\x77\x6a\x28\x49\xf9\xec\x87\x72\x29\x3d\x39\x49\x29\xeb\x87\x72\x94\x9d\xb7\x74\x81\x7f\x4f\x0a\x98\x4d\xbb\x93\x34\x09\xd5\x0b\xd9\xd4\x4b\xa9\xd4\xbf\xbd\x7c\x64\x44\x3a\x19\x23\x4d\xfc\xd0\x30\xd2\xc2\xfa\x96\x58\x29\x48\x1f\x3f\x19\x38\x13\x25\xec\x33\xa8\x2b\xc4\x5f\x89\x3b\xee\xd4\x3c\x52\x0c\x4a\x89\xb4\x23\x5c\x08\xda\x3e\x76\x9c\xd8\x03\x73\x76\x30\xa1\x8b\xf4\xb6\xfa\x4d\xb0\x81\x48\x14\xf2\x39\x9c\x8b\x92\x79\x73\xe8\x7b\xb6\xa2\xfc\x1e\xf1\x9c\x0b\x75\x0e\xfd\x60\x67\x9e\xb4\xf9\xe8\x10\x80\x2b\x8f\x5c\x83\x3f\x5a\x47\xbe\x8d\x73\x07\x68\x49\x15\xeb\x18\x7c\xef\xec\x2d\xda\x1b\x8a\x39\x17\xa5\xec\x23\xa3\x1b\x3b\x14\x0e\x68\xa3\xcd\x51\xe7\x3a\x56\xd5\xf3\x06\x6a\x2f\xa2\x1f\xf8\xf7\x91\xd9\x75\xf8\xab\x96\xa7\xef\xc3\xe5\x2f\xac\x15\xc9\xb6\x9d\xa3\x26\x6c\x7a\x4d\x87\xe4\x4c\xe3\xdb\xa7\xe7\xf5\xcf\x08\x4c\xba\xd6\xb0\xf3\x3c\x4a\x4d\xd2\x1f\xa1\x2f\xff\x35\x4c\xdc\x45\x9a\xab\x4e\x4c\x49\xea\xe2\xe7\x07\xdc\x60\x65\x2c\xd8\x43\xb6\x30\x3d\xdc\x73\x15\xaf\x77\xd1\x7c\x60\x91\x49\x3d\x70\xb1\x5d\x8a\x67\xab\x48\x7b\xdd\x55\x2e\x44\x78\x1f\xe1\xaa\xa3\x49\xf0\x0b\x5b\xba\xa7\xf2\xcc\x3d\x95\x2f\xdc\x53\x0f\x74\xe1\xd7\x8b\xd1\x7c\xba\x7d\x9d\x29\x8f\x7d\x32\x5c\x16\x71\x4c\x98\xd2\x6a\xd9\x0e\xfa\x96\xc8\xa5\xb8\xac\x5c\x02\x77\xce\x88\x66\x48\x5d\x68\x50\xdf\xc8\x3b\x9d\xa0\x63\x0f\x85\x4d\x37\xa8\x1a\x10\x75\x5b\x3b\x54\xba\x3d\x3f\xe8\x58\xd3\x8d\x40\x96\x2e\x24\xb9\xd2\xeb\xfd\x4f\x20\xe3\x4b\x97\x71\xe5\xc9\x28\x73\x6e\x41\x7a\x55\xef\xea\xc7\xbf\x76\x44\x8d\xdf\xb1\xdd\xb9\xe6\x12\x9c\x64\x4d\xb8\x48\xf2\x2a\x4e\x21\xfe\xc0\x6b\x71\x4e\x98\x4f\x52\x8e\xf1\xff\xb6\x92\xf4\x7f\x2a\x69\x2f\x42\xa4\x6d\x35\x45\x17\x66\xfc\x93\xa4\x67\x2f\x4b\x62\x1f\xfb\x77\xde\x0d\x75\x65\x18\x59\x99\x98\x26\xf6\xa8\x07\xc9\xb3\xb2\x6f\x75\x11\x8b\x78\x5f\xaa\x0a\x76\x03\xd3\xa7\xfc\x7a\xbe\x4f\xf3\xf8\x99\x8d\xd8\xc6\xb9\xab\x9f\xeb\xf8\xfb\xd2\xc8\xfb\x0c\xf2\xdf\xd3\x14\xf0\x6f\x9d\x88\x56\x18\xa5\xa0\xc4\x5c\xbc\x93\x44\x74\x52\xce\xfa\xb6\x44\xf4\x35\xbe\x56\x35\x6c\xe5\x46\x4a\xe6\x21\xc0\x45\xb2\x06\x94\x50\x34\xa8\x21\x2e\xde\xe7\xc4\x1c\x64\x40\x0f\xaf\x4f\x39\xb5\xcb\x62\x4b\x41\x9b\x2a\x15\xb3\x8f\xe3\x86\xe6\x94\x77\xc5\x83\xee\x32\x1b\x76\xf7\x60\x0f\x99\x17\xdb\x7e\xae\xa8\xa7\x1e\x43\xce\x5c\xc0\xf4\x39\xe8\x4a\xad\x2c\x4f\x61\x9e\x6d\x3b\xff\xf8\xab\xa9\xbd\xb7\x14\x56\xaf\xb2\xcc\x43\x31\xe2\x35\x9d\x97\xd7\x74\xa4\x9c\x7b\xca\xe1\x9c\x20\x22\x74\x0c\x90\x3a\xfa\x47\xa9\xdf\x73\x87\xff\xff\xfa\xf9\xa7\xdf\xc3\x32\xfb\x61\x02\x0c\x08\x33\x10\x25\x1b\xd0\x75\xbf\xde\x1d\xa1\xbe\xfb\xf4\xe7\x53\x7f\xfe\xf9\xc0\x13\x65\xfb\xd7\x3b\xe0\xc3\xc2\x10\xf4\x01\x60\x88\xc5\x33\x8d\x6f\xff\x13\x00\x00\xff\xff\xab\x63\x3c\x66\x76\x4c\x00\x00")

func templateHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templateHtml,
		"template.html",
	)
}

func templateHtml() (*asset, error) {
	bytes, err := templateHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template.html", size: 19574, mode: os.FileMode(438), modTime: time.Unix(1590304770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"template.html": templateHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"template.html": &bintree{templateHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
